{"version":3,"sources":["components/SignIn/SignIn.js","components/Register/Register.js","components/Header/Header.js","components/generateBooks/GenerateBooks.js","components/BooksList/BooksList.js","components/Footer/Footer.js","components/MyProfile/MyProfile.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","props","state","email","password","handleChangePassword","bind","handleChangeEmail","handleSubmit","event","target","value","this","setState","preventDefault","localStorage","getItem","alert","currentUser","JSON","parse","console","log","logout","handler","user","booksToRead","getUser","loggedInStatus","id","onSubmit","onChange","className","type","name","placeholder","required","to","onClick","Component","Register","setItem","stringify","Header","GenerateBooks","randBooksList","apiKey","isClicked","showDetails","axios","get","then","data","items","clickedid","document","querySelector","par","prevState","style","display","map","randbook","i","volumeInfo","title","src","imageLinks","thumbnail","alt","description","Footer","book","result","handleChange","htmlFor","href","previewLink","MyProfile","App","BooksList","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2fee2507.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n        }\r\n        this.handleChangePassword = this.handleChangePassword.bind(this);\r\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChangePassword(event) {\r\n        const password = event.target.value;\r\n        this.setState({ password: password });\r\n    }\r\n    handleChangeEmail(event) {\r\n        const email = event.target.value;\r\n        this.setState({ email: email });\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        //check for password should be added\r\n        if (localStorage.getItem(this.state.email) === null) {\r\n            alert(\"The username you entered is incorrect\");\r\n            this.setState({ email: \"\" });\r\n            this.setState({ password: \"\" });\r\n        }\r\n        else {\r\n            var currentUser = JSON.parse(localStorage.getItem(this.state.email,\" \"));\r\n            console.log(currentUser[\"password\"])\r\n            console.log(this.state.password)\r\n\r\n            if(currentUser[\"password\"] !== this.state.password){\r\n                alert(\"Incorrect password\");\r\n                this.props.logout();\r\n                this.setState({ email: \"\" });\r\n                this.setState({ password: \"\" });\r\n            }\r\n            else{\r\n                console.log(\"you have successfully signed in\")\r\n                this.props.handler();\r\n\r\n                this.setState({ email: currentUser.email });\r\n                this.setState({ password: currentUser.password });\r\n\r\n                const user = {\r\n                   \"email\": this.state.email,\r\n                   password: this.state.password,\r\n                   booksToRead: []\r\n                };\r\n                this.props.getUser();\r\n                console.log(user)\r\n                // currentState[email] = this.state.email;\r\n                // currentState[password] = this.state.password;\r\n                // console.log(currentState)\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            this.props.loggedInStatus === \"not_logged_in\" ?\r\n                <form id=\"sign-in\" onSubmit={this.handleSubmit}>\r\n                    <input onChange={this.handleChangeEmail}\r\n                        className=\"form-control\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email address\"\r\n                        value={this.state.email}\r\n                        required\r\n                    />\r\n                    <input onChange={this.handleChangePassword}\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.password}\r\n                        required />\r\n                    <button className=\"btn btn-secondary\" type=\"submit\">Sign in</button>\r\n                </form>\r\n                :\r\n                <div id=\"profile-link\">\r\n                    <Link to=\"/myProfile\" className=\"nav-item nav-link\">My Profile</Link>\r\n                    <button className=\"btn btn-secondary\" onClick={this.props.logout}>Sign out</button>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react'\r\n// import usersData from '../usersData'\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n        }\r\n\r\n        this.handleChangePassword = this.handleChangePassword.bind(this);\r\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChangePassword(event) {\r\n        const password = event.target.value;\r\n        this.setState({ password: password });\r\n        console.log(password);\r\n\r\n    }\r\n    handleChangeEmail(event) {\r\n        const email = event.target.value;\r\n        this.setState({ email: email });\r\n        console.log(email);\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            booksToRead: []\r\n        }\r\n        if (localStorage.getItem(this.state.email) === null) {\r\n            localStorage.setItem(this.state.email, JSON.stringify(user));\r\n            console.log(localStorage);\r\n        }\r\n        else {\r\n            alert(\"Email already exists\");\r\n            this.setState({ email: \"\" });\r\n            this.setState({ password: \"\" });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            this.props.loggedInStatus === \"not_logged_in\" ?\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <p>New here? Create an account.</p>\r\n                    <input onChange={this.handleChangeEmail}\r\n                        className=\"form-control\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email address\"\r\n                        value={this.state.email}\r\n                        required\r\n                    />\r\n                    <input onChange={this.handleChangePassword}\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.password}\r\n                        required \r\n                        />\r\n                    <button className=\"btn btn-secondary\" type=\"submit\">Sign up</button>\r\n                </form>\r\n                :\r\n                null\r\n                // <h5>Here are some suggestions for you</h5>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react'\r\nimport './header.css'\r\nimport SignIn from '../SignIn/SignIn'\r\nimport Register from '../Register/Register'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            loggedInStatus: \"not_logged_in\",\r\n        }\r\n        this.handler = this.handler.bind(this)\r\n        this.logout = this.logout.bind(this)\r\n        this.getUser = this.getUser.bind(this)\r\n    }\r\n    handler() {\r\n        this.setState({\r\n            loggedInStatus: \"logged_in\"\r\n        })\r\n    }\r\n    logout() {\r\n        this.setState({\r\n            loggedInStatus: \"not_logged_in\"\r\n        })\r\n    }\r\n    getUser(){\r\n        // const email = this.getUser\r\n        // this.setState({\r\n        //     email: email\r\n        // })\r\n        // console.log(this.state.email)\r\n    }\r\n    render() {\r\n        return (\r\n            <header className=\"container-fluid\">\r\n                <div className=\"header\">\r\n                    <figure id=\"logo\">goodreads lite</figure>\r\n                    <SignIn\r\n                        logout={this.logout}\r\n                        handler={this.handler}\r\n                        getUser={this.getUser}\r\n                        loggedInStatus={this.state.loggedInStatus}\r\n                    />\r\n                </div>\r\n                <section className=\"container-fluid\">\r\n                    <div className=\"registration\">\r\n                        <h1>Meet your next favourite book!</h1>\r\n                        <Register \r\n                        loggedInStatus={this.state.loggedInStatus} \r\n                        />\r\n                    </div>\r\n                </section>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './generate-books.css'\r\n\r\nclass GenerateBooks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            randBooksList: [],\r\n            apiKey: \"AIzaSyBkreKlZWUTi1ZdZFijpy1MNZye0nyY-KY\",\r\n            isClicked: false\r\n        }\r\n        this.showDetails = this.showDetails.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`https://www.googleapis.com/books/v1/volumes?q=harry&key=${this.state.apiKey}&maxResults=9`)\r\n            .then(data => {\r\n                this.setState({ randBooksList: data.data.items })\r\n                console.log(this.state.randBooksList)\r\n            })\r\n    }\r\n    showDetails(event) {\r\n        let clickedid = document.querySelector(`#${event.target.id}`);\r\n        console.log(clickedid.id);\r\n\r\n        let par = document.querySelector(`#${clickedid.id}+.hidden`);\r\n    \r\n        this.setState(prevState => {\r\n            return {\r\n                isClicked: !prevState.isClicked\r\n            }\r\n        })\r\n        !this.state.isClicked ? par.style.display = \"block\" : par.style.display = \"none\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"books-container container-fluid\">\r\n                {\r\n                    this.state.randBooksList.map((randbook, i) => (\r\n                        <div className=\"basis container-fluid\">\r\n                            <h5>{randbook.volumeInfo.title}</h5>\r\n                            <img id={`num${i}`} onClick={this.showDetails}\r\n                                src={randbook.volumeInfo.imageLinks.thumbnail}\r\n                                alt={randbook.title}\r\n                            />\r\n                            <div className=\"hidden\">\r\n                                <p>{randbook.volumeInfo.description}</p>\r\n                                <button className=\"btn btn-secondary\">Add to \"Want to read\"</button>\r\n                                <button className=\"btn btn-secondary\">Add to \"Read\"</button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GenerateBooks;","import React, { Component } from 'react'\r\nimport './booklist.css'\r\nimport axios from 'axios'\r\nimport GenerateBooks from '../generateBooks/GenerateBooks'\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            book: \" \",\r\n            result: [],\r\n            apiKey: \"AIzaSyBkreKlZWUTi1ZdZFijpy1MNZye0nyY-KY\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const book = event.target.value;\r\n        this.setState({ book: book });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.state.book !== \" \") {\r\n            axios.get(`https://www.googleapis.com/books/v1/volumes?q=${this.state.book}&key=${this.state.apiKey}&maxResults=40`)\r\n                .then(data => {\r\n                    this.setState({ result: data.data.items })\r\n                    console.log(this.state.result);\r\n                })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <section id=\"books\">\r\n                    <GenerateBooks />\r\n                </section>\r\n                <section id=\"search\" className=\"container-fluid\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"search-bar\">\r\n                            <label htmlFor=\"search\">Search and browse books</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                                placeholder=\"Search by book's title\"\r\n                                name=\"search\"\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" className=\" btn btn-secondary\">Search</button>\r\n                    </form>\r\n                    <section>\r\n                        {\r\n                            this.state.result.map(book => (\r\n                                <a href={book.volumeInfo.previewLink}>\r\n                                    <h5>{book.volumeInfo.title}</h5>\r\n                                    <img src={book.volumeInfo.imageLinks.thumbnail} alt={book.title} />\r\n                                </a>\r\n                            ))\r\n                        }\r\n                    </section>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\nimport './footer.css'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <section>\r\n                    <div>Company</div>\r\n                    <div>Work with us</div>\r\n                    <div>Connect</div>\r\n                </section>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\n\r\nclass MyProfile extends Component {\r\n    render() {\r\n        return (\r\n            <section>\r\n                <section id=\"books-to-read\">\r\n                    <h1>Books I want to read</h1>\r\n                </section>\r\n                <section id=\"books-read\">\r\n                    <h1>\r\n                        Books I already read\r\n                    </h1>\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyProfile;","import React, { Component } from 'react';\nimport './app.css'\nimport Header from './components/Header/Header'\nimport BooksList from './components/BooksList/BooksList'\nimport Footer from './components/Footer/Footer';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport MyProfile from './components/MyProfile/MyProfile';\nimport SignIn from './components/SignIn/SignIn';\n\nclass App extends Component {\n  render(){\n  return (\n    <Router>\n    <div>\n      <Header/>\n      <BooksList/>\n            {/* <Route exact path={\"/\"} component={BooksList} /> */}\n            <Switch>\n            <Route path=\"/myProfile\" component={MyProfile} />\n      </Switch>\n      <Footer/>\n    </div>\n    </Router>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './app.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}